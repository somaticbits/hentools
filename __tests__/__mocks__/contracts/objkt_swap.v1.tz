parameter (or (or (nat %cancel_swap) (or (pair %collect (nat %objkt_amount) (nat %swap_id)) (pair %curate (nat %hDAO_amount) (nat %objkt_id)))) (or (or (unit %genesis) (pair %mint_OBJKT (pair (address %address) (nat %amount)) (pair (bytes %metadata) (nat %royalties)))) (or (pair %swap (nat %objkt_amount) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) (address %update_manager))));
storage   (pair (pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager)))) (pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))));
code
  {
    UNPAIR;     # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            # == cancel_swap ==
            # sp.verify(self.data.swaps[params].issuer == sp.sender) # @parameter%cancel_swap : @storage
            SENDER;     # @sender : @parameter%cancel_swap : @storage
            DUP 3;      # @storage : @sender : @parameter%cancel_swap : @storage
            GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @sender : @parameter%cancel_swap : @storage
            DUP 3;      # @parameter%cancel_swap : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @sender : @parameter%cancel_swap : @storage
            GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @sender : @parameter%cancel_swap : @storage
            IF_NONE
              {
                PUSH int 476; # int : @sender : @parameter%cancel_swap : @storage
                FAILWITH;   # FAILED
              }
              {}; # @some : @sender : @parameter%cancel_swap : @storage
            CAR;        # pair (address %issuer) (nat %objkt_amount) : @sender : @parameter%cancel_swap : @storage
            CAR;        # address : @sender : @parameter%cancel_swap : @storage
            COMPARE;    # int : @parameter%cancel_swap : @storage
            EQ;         # bool : @parameter%cancel_swap : @storage
            IF
              {}
              {
                PUSH string "WrongCondition: self.data.swaps[params].issuer == sp.sender"; # string : @parameter%cancel_swap : @storage
                FAILWITH;   # FAILED
              }; # @parameter%cancel_swap : @storage
            # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(to_ = sp.sender, token_id = self.data.swaps[params].objkt_id, amount = self.data.swaps[params].objkt_amount)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), self.data.objkt, entry_point='transfer').open_some()) # @parameter%cancel_swap : @storage
            NIL operation; # list operation : @parameter%cancel_swap : @storage
            DUP 3;      # @storage : list operation : @parameter%cancel_swap : @storage
            GET 3;      # pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id)) : list operation : @parameter%cancel_swap : @storage
            GET 3;      # address : list operation : @parameter%cancel_swap : @storage
            CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : @parameter%cancel_swap : @storage
            IF_NONE
              {
                PUSH int 584; # int : list operation : @parameter%cancel_swap : @storage
                FAILWITH;   # FAILED
              }
              {}; # @some : list operation : @parameter%cancel_swap : @storage
            PUSH mutez 0; # mutez : @some : list operation : @parameter%cancel_swap : @storage
            NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            DUP 7;      # @storage : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            DUP 7;      # @parameter%cancel_swap : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            IF_NONE
              {
                PUSH int 477; # int : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
                FAILWITH;   # FAILED
              }
              {}; # @some : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            CAR;        # pair (address %issuer) (nat %objkt_amount) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            CDR;        # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            DUP 8;      # @storage : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            DUP 8;      # @parameter%cancel_swap : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            IF_NONE
              {
                PUSH int 477; # int : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
                FAILWITH;   # FAILED
              }
              {}; # @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            GET 3;      # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            SENDER;     # @sender : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            PAIR 3;     # pair @sender (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%cancel_swap : @storage
            TRANSFER_TOKENS; # operation : list operation : @parameter%cancel_swap : @storage
            CONS;       # list operation : @parameter%cancel_swap : @storage
            # del self.data.swaps[params] # list operation : @parameter%cancel_swap : @storage
            DIG 2;      # @storage : list operation : @parameter%cancel_swap
            DUP;        # @storage : @storage : list operation : @parameter%cancel_swap
            GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%cancel_swap
            NONE (pair (pair address nat) (pair nat mutez)); # option (pair (pair address nat) (pair nat mutez)) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%cancel_swap
            DIG 4;      # @parameter%cancel_swap : option (pair (pair address nat) (pair nat mutez)) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation
            UPDATE;     # big_map nat (pair (pair address nat) (pair nat mutez)) : @storage : list operation
            UPDATE 8;   # @storage : list operation
            SWAP;       # list operation : @storage
          }
          {
            IF_LEFT
              {
                # == collect ==
                # sp.verify((params.objkt_amount > 0) & (sp.sender != self.data.swaps[params.swap_id].issuer)) # @parameter%collect : @storage
                DUP;        # @parameter%collect : @parameter%collect : @storage
                CAR;        # nat : @parameter%collect : @storage
                PUSH nat 0; # nat : nat : @parameter%collect : @storage
                COMPARE;    # int : @parameter%collect : @storage
                LT;         # bool : @parameter%collect : @storage
                IF
                  {
                    SWAP;       # @storage : @parameter%collect
                    DUP;        # @storage : @storage : @parameter%collect
                    DUG 2;      # @storage : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @parameter%collect : @storage
                    SWAP;       # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage
                    DUP;        # @parameter%collect : @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage
                    DUG 2;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 483; # int : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%collect : @storage
                    CAR;        # pair (address %issuer) (nat %objkt_amount) : @parameter%collect : @storage
                    CAR;        # address : @parameter%collect : @storage
                    SENDER;     # @sender : address : @parameter%collect : @storage
                    COMPARE;    # int : @parameter%collect : @storage
                    NEQ;        # bool : @parameter%collect : @storage
                  }
                  {
                    PUSH bool False; # bool : @parameter%collect : @storage
                  }; # bool : @parameter%collect : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: (params.objkt_amount > 0) & (sp.sender != self.data.swaps[params.swap_id].issuer)"; # string : @parameter%collect : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%collect : @storage
                # if self.data.swaps[params.swap_id].xtz_per_objkt != sp.tez(0): # @parameter%collect : @storage
                PUSH mutez 0; # mutez : @parameter%collect : @storage
                DUP 3;      # @storage : mutez : @parameter%collect : @storage
                GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : @parameter%collect : @storage
                DUP 3;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : @parameter%collect : @storage
                CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : @parameter%collect : @storage
                GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : @parameter%collect : @storage
                IF_NONE
                  {
                    PUSH int 485; # int : mutez : @parameter%collect : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : mutez : @parameter%collect : @storage
                GET 4;      # mutez : mutez : @parameter%collect : @storage
                COMPARE;    # int : @parameter%collect : @storage
                NEQ;        # bool : @parameter%collect : @storage
                IF
                  {
                    SWAP;       # @storage : @parameter%collect
                    # sp.verify(((params.objkt_amount == sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some())) & (sp.amount == sp.mul(sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some()), sp.mutez(1)))) & (sp.amount > sp.tez(0))) # @storage : @parameter%collect
                    DUP;        # @storage : @storage : @parameter%collect
                    DUG 2;      # @storage : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @parameter%collect : @storage
                    SWAP;       # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage
                    DUP;        # @parameter%collect : @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage
                    DUG 2;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%collect : @storage
                    GET 4;      # mutez : @parameter%collect : @storage
                    AMOUNT;     # @amount : mutez : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%collect : @storage
                    CAR;        # nat : @parameter%collect : @storage
                    SWAP;       # @parameter%collect : nat : @storage
                    DUP;        # @parameter%collect : @parameter%collect : nat : @storage
                    DUG 2;      # @parameter%collect : nat : @parameter%collect : @storage
                    CAR;        # nat : nat : @parameter%collect : @storage
                    COMPARE;    # int : @parameter%collect : @storage
                    EQ;         # bool : @parameter%collect : @storage
                    IF
                      {
                        PUSH mutez 1; # mutez : @parameter%collect : @storage
                        DUP;        # mutez : mutez : @parameter%collect : @storage
                        DUP 4;      # @storage : mutez : mutez : @parameter%collect : @storage
                        GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : @parameter%collect : @storage
                        DUP 4;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : @parameter%collect : @storage
                        CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : @parameter%collect : @storage
                        GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : @parameter%collect : @storage
                        IF_NONE
                          {
                            PUSH int 489; # int : mutez : mutez : @parameter%collect : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : mutez : mutez : @parameter%collect : @storage
                        GET 4;      # mutez : mutez : mutez : @parameter%collect : @storage
                        EDIV;       # option (pair nat mutez) : mutez : @parameter%collect : @storage
                        IF_NONE
                          {
                            PUSH int 489; # int : mutez : @parameter%collect : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : mutez : @parameter%collect : @storage
                        CAR;        # nat : mutez : @parameter%collect : @storage
                        DUP 4;      # @storage : nat : mutez : @parameter%collect : @storage
                        GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : @parameter%collect : @storage
                        DUP 4;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : @parameter%collect : @storage
                        CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : @parameter%collect : @storage
                        GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : @parameter%collect : @storage
                        IF_NONE
                          {
                            PUSH int 487; # int : nat : mutez : @parameter%collect : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : mutez : @parameter%collect : @storage
                        GET 4;      # mutez : nat : mutez : @parameter%collect : @storage
                        AMOUNT;     # @amount : mutez : nat : mutez : @parameter%collect : @storage
                        EDIV;       # option (pair nat mutez) : nat : mutez : @parameter%collect : @storage
                        IF_NONE
                          {
                            PUSH int 487; # int : nat : mutez : @parameter%collect : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : mutez : @parameter%collect : @storage
                        CAR;        # nat : nat : mutez : @parameter%collect : @storage
                        MUL;        # nat : mutez : @parameter%collect : @storage
                        MUL;        # mutez : @parameter%collect : @storage
                        AMOUNT;     # @amount : mutez : @parameter%collect : @storage
                        COMPARE;    # int : @parameter%collect : @storage
                        EQ;         # bool : @parameter%collect : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%collect : @storage
                      }; # bool : @parameter%collect : @storage
                    IF
                      {
                        PUSH mutez 0; # mutez : @parameter%collect : @storage
                        AMOUNT;     # @amount : mutez : @parameter%collect : @storage
                        COMPARE;    # int : @parameter%collect : @storage
                        GT;         # bool : @parameter%collect : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%collect : @storage
                      }; # bool : @parameter%collect : @storage
                    IF
                      {}
                      {
                        PUSH string "WrongCondition: ((params.objkt_amount == sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some())) & (sp.amount == sp.mul(sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some()), sp.mutez(1)))) & (sp.amount > sp.tez(0))"; # string : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%collect : @storage
                    # sp.send(self.data.royalties[self.data.swaps[params.swap_id].objkt_id].issuer, sp.mul((self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties * ((sp.fst(sp.ediv(sp.mul(sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some()), sp.mutez(1)), sp.mul(1, sp.mutez(1))).open_some()) * (self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties + 25)) // 1000)) // (self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties + 25), sp.mutez(1))) # @parameter%collect : @storage
                    NIL operation; # list operation : @parameter%collect : @storage
                    DIG 2;      # @storage : list operation : @parameter%collect
                    DUP;        # @storage : @storage : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : list operation : @parameter%collect
                    DUG 4;      # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : list operation : @parameter%collect : @storage
                    DUP 4;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 497; # int : big_map nat (pair (address %issuer) (nat %royalties)) : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 497; # int : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%collect : @storage
                    CAR;        # address : list operation : @parameter%collect : @storage
                    CONTRACT unit; # option (contract unit) : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 497; # int : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 25; # nat : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 5;      # @storage : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect
                    DUG 7;      # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 7;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    ADD;        # nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1000; # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 25; # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 7;      # @storage : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUG 9;      # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    ADD;        # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1; # nat : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP;        # mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @storage : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @storage : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    AMOUNT;     # @amount : mutez : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat nat) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                      }; # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 6;      # @storage : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : nat : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : nat : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUG 8;      # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 8;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat nat) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : mutez : @some : list operation : @parameter%collect : @storage
                      }; # nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : @some : list operation : @parameter%collect : @storage
                    UNIT;       # unit : mutez : @some : list operation : @parameter%collect : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%collect : @storage
                    CONS;       # list operation : @parameter%collect : @storage
                    # sp.send(self.data.manager, sp.mul(abs(((sp.fst(sp.ediv(sp.mul(sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some()), sp.mutez(1)), sp.mul(1, sp.mutez(1))).open_some()) * (self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties + 25)) // 1000) - ((self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties * ((sp.fst(sp.ediv(sp.mul(sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some()), sp.mutez(1)), sp.mul(1, sp.mutez(1))).open_some()) * (self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties + 25)) // 1000)) // (self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties + 25))), sp.mutez(1))) # list operation : @parameter%collect : @storage
                    DUP 3;      # @storage : list operation : @parameter%collect : @storage
                    CAR;        # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation : @parameter%collect : @storage
                    GET 6;      # address : list operation : @parameter%collect : @storage
                    CONTRACT unit; # option (contract unit) : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 500; # int : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 25; # nat : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 5;      # @storage : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect
                    DUG 7;      # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 7;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    ADD;        # nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1000; # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 25; # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 7;      # @storage : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUG 9;      # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    ADD;        # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1; # nat : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP;        # mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @storage : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @storage : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    AMOUNT;     # @amount : mutez : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat nat) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                      }; # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 6;      # @storage : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : nat : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : nat : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUG 8;      # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 8;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat nat) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : mutez : @some : list operation : @parameter%collect : @storage
                      }; # nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1000; # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 25; # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 7;      # @storage : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUG 9;      # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    ADD;        # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1; # nat : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP;        # mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @storage : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : mutez : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @storage : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    AMOUNT;     # @amount : mutez : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : mutez : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat nat) : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                      }; # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    SUB;        # int : mutez : @some : list operation : @parameter%collect : @storage
                    ABS;        # nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : @some : list operation : @parameter%collect : @storage
                    UNIT;       # unit : mutez : @some : list operation : @parameter%collect : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%collect : @storage
                    CONS;       # list operation : @parameter%collect : @storage
                    # sp.send(self.data.swaps[params.swap_id].issuer, sp.amount - sp.mul((sp.fst(sp.ediv(sp.mul(sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some()), sp.mutez(1)), sp.mul(1, sp.mutez(1))).open_some()) * (self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties + 25)) // 1000, sp.mutez(1))) # list operation : @parameter%collect : @storage
                    DUP 3;      # @storage : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : list operation : @parameter%collect : @storage
                    DUP 3;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 503; # int : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%collect : @storage
                    CAR;        # pair (address %issuer) (nat %objkt_amount) : list operation : @parameter%collect : @storage
                    CAR;        # address : list operation : @parameter%collect : @storage
                    CONTRACT unit; # option (contract unit) : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 503; # int : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1000; # nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 25; # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 6;      # @storage : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : nat : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : nat : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect
                    DUG 8;      # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 8;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    ADD;        # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1; # nat : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP;        # mutez : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 10;     # @storage : mutez : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 10;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : mutez : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 10;     # @storage : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 10;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    AMOUNT;     # @amount : mutez : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : mutez : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : nat : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat nat) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : mutez : @some : list operation : @parameter%collect : @storage
                      }; # nat : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : @some : list operation : @parameter%collect : @storage
                    AMOUNT;     # @amount : mutez : @some : list operation : @parameter%collect : @storage
                    SUB_MUTEZ;  # option mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 503; # int : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @some : list operation : @parameter%collect : @storage
                    UNIT;       # unit : @some : @some : list operation : @parameter%collect : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%collect : @storage
                    CONS;       # list operation : @parameter%collect : @storage
                    # sp.transfer(sp.list([sp.record(amount = (sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some())) // 2, to_ = sp.sender), sp.record(amount = (sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some())) // 2, to_ = self.data.swaps[params.swap_id].issuer), sp.record(amount = abs(((sp.fst(sp.ediv(sp.mul(sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some()), sp.mutez(1)), sp.mul(1, sp.mutez(1))).open_some()) * (self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties + 25)) // 1000) - ((self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties * ((sp.fst(sp.ediv(sp.mul(sp.fst(sp.ediv(sp.amount, self.data.swaps[params.swap_id].xtz_per_objkt).open_some()) * sp.fst(sp.ediv(self.data.swaps[params.swap_id].xtz_per_objkt, sp.mutez(1)).open_some()), sp.mutez(1)), sp.mul(1, sp.mutez(1))).open_some()) * (self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties + 25)) // 1000)) // (self.data.royalties[self.data.swaps[params.swap_id].objkt_id].royalties + 25))), to_ = self.data.manager)]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress).layout(("amount", "to_"))), self.data.hdao, entry_point='hDAO_batch').open_some()) # list operation : @parameter%collect : @storage
                    DUP 3;      # @storage : list operation : @parameter%collect : @storage
                    CAR;        # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation : @parameter%collect : @storage
                    GET 3;      # address : list operation : @parameter%collect : @storage
                    CONTRACT %hDAO_batch (list (pair (nat %amount) (address %to_))); # option (contract (list (pair (nat %amount) (address %to_)))) : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 569; # int : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%collect : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%collect : @storage
                    NIL (pair nat address); # list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 6;      # @storage : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 6;      # address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 25; # nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 7;      # @storage : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUG 9;      # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    ADD;        # nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1000; # nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 25; # nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 9;      # @storage : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUG 11;     # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    ADD;        # nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1; # nat : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP;        # mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 13;     # @storage : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 13;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 13;     # @storage : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 13;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    AMOUNT;     # @amount : mutez : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat nat) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                      }; # nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 8;      # @storage : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUG 10;     # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 10;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat nat) : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 494; # int : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                      }; # nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1000; # nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 25; # nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DIG 9;      # @storage : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    SWAP;       # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUP;        # @storage : @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect
                    DUG 11;     # @storage : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 11;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 3;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (address %issuer) (nat %royalties)) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    ADD;        # nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 1; # nat : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP;        # mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 13;     # @storage : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 13;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : mutez : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 13;     # @storage : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 13;     # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    AMOUNT;     # @amount : mutez : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # mutez : mutez : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat nat) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 493; # int : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                      }; # nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    SUB;        # int : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    ABS;        # nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PAIR;       # pair nat address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CONS;       # list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 6;      # @storage : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 6;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 507; # int : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # pair (address %issuer) (nat %objkt_amount) : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 2; # nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @storage : mutez : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : mutez : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @storage : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    AMOUNT;     # @amount : mutez : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat nat) : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 507; # int : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                      }; # nat : address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PAIR;       # pair nat address : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CONS;       # list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    SENDER;     # @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH nat 2; # nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PUSH mutez 1; # mutez : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @storage : mutez : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : mutez : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : mutez : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : mutez : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : mutez : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 489; # int : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @storage : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    DUP 9;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    GET 4;      # mutez : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    AMOUNT;     # @amount : mutez : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat mutez) : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 487; # int : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CAR;        # nat : nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    MUL;        # nat : nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    EDIV;       # option (pair nat nat) : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    IF_NONE
                      {
                        PUSH int 507; # int : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        CAR;        # nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                      }; # nat : @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    PAIR;       # pair nat @sender : list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    CONS;       # list (pair nat address) : mutez : @some : list operation : @parameter%collect : @storage
                    TRANSFER_TOKENS; # operation : list operation : @parameter%collect : @storage
                    CONS;       # list operation : @parameter%collect : @storage
                  }
                  {
                    NIL operation; # list operation : @parameter%collect : @storage
                  }; # list operation : @parameter%collect : @storage
                # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(to_ = sp.sender, token_id = self.data.swaps[params.swap_id].objkt_id, amount = params.objkt_amount)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), self.data.objkt, entry_point='transfer').open_some()) # list operation : @parameter%collect : @storage
                DUP 3;      # @storage : list operation : @parameter%collect : @storage
                GET 3;      # pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id)) : list operation : @parameter%collect : @storage
                GET 3;      # address : list operation : @parameter%collect : @storage
                CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : @parameter%collect : @storage
                IF_NONE
                  {
                    PUSH int 584; # int : list operation : @parameter%collect : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : @parameter%collect : @storage
                PUSH mutez 0; # mutez : @some : list operation : @parameter%collect : @storage
                NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                DUP 6;      # @parameter%collect : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                CAR;        # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                DUP 8;      # @storage : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                DUP 8;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                IF_NONE
                  {
                    PUSH int 509; # int : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                GET 3;      # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                SENDER;     # @sender : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                PAIR 3;     # pair @sender (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%collect : @storage
                TRANSFER_TOKENS; # operation : list operation : @parameter%collect : @storage
                CONS;       # list operation : @parameter%collect : @storage
                # self.data.swaps[params.swap_id].objkt_amount = abs(self.data.swaps[params.swap_id].objkt_amount - params.objkt_amount) # list operation : @parameter%collect : @storage
                DUP 3;      # @storage : list operation : @parameter%collect : @storage
                DUP;        # @storage : @storage : list operation : @parameter%collect : @storage
                GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                DUP;        # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                DUP 5;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                DUP;        # nat : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                DUG 2;      # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                IF_NONE
                  {
                    PUSH int 511; # int : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                UNPAIR;     # pair (address %issuer) (nat %objkt_amount) : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                CAR;        # address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                DUP 7;      # @parameter%collect : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                CAR;        # nat : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect : @storage
                DIG 8;      # @storage : nat : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                DUP 9;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                IF_NONE
                  {
                    PUSH int 511; # int : nat : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                CAR;        # pair (address %issuer) (nat %objkt_amount) : nat : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                CDR;        # nat : nat : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                SUB;        # int : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                ABS;        # nat : address : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                SWAP;       # address : nat : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                PAIR;       # pair address nat : pair (nat %objkt_id) (mutez %xtz_per_objkt) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                PAIR;       # pair (pair address nat) (pair (nat %objkt_id) (mutez %xtz_per_objkt)) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                SOME;       # option (pair (pair address nat) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                SWAP;       # nat : option (pair (pair address nat) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                UPDATE;     # big_map nat (pair (pair address nat) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                UPDATE 8;   # @storage : list operation : @parameter%collect
                DUG 2;      # list operation : @parameter%collect : @storage
                # if self.data.swaps[params.swap_id].objkt_amount == 0: # list operation : @parameter%collect : @storage
                PUSH nat 0; # nat : list operation : @parameter%collect : @storage
                DUP 4;      # @storage : nat : list operation : @parameter%collect : @storage
                GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : list operation : @parameter%collect : @storage
                DUP 4;      # @parameter%collect : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : list operation : @parameter%collect : @storage
                CDR;        # nat : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : list operation : @parameter%collect : @storage
                GET;        # option (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : nat : list operation : @parameter%collect : @storage
                IF_NONE
                  {
                    PUSH int 513; # int : nat : list operation : @parameter%collect : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : list operation : @parameter%collect : @storage
                CAR;        # pair (address %issuer) (nat %objkt_amount) : nat : list operation : @parameter%collect : @storage
                CDR;        # nat : nat : list operation : @parameter%collect : @storage
                COMPARE;    # int : list operation : @parameter%collect : @storage
                EQ;         # bool : list operation : @parameter%collect : @storage
                IF
                  {
                    # del self.data.swaps[params.swap_id] # list operation : @parameter%collect : @storage
                    DIG 2;      # @storage : list operation : @parameter%collect
                    DUP;        # @storage : @storage : list operation : @parameter%collect
                    GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                    NONE (pair (pair address nat) (pair nat mutez)); # option (pair (pair address nat) (pair nat mutez)) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%collect
                    DIG 4;      # @parameter%collect : option (pair (pair address nat) (pair nat mutez)) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation
                    CDR;        # nat : option (pair (pair address nat) (pair nat mutez)) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation
                    UPDATE;     # big_map nat (pair (pair address nat) (pair nat mutez)) : @storage : list operation
                    UPDATE 8;   # @storage : list operation
                    SWAP;       # list operation : @storage
                  }
                  {
                    SWAP;       # @parameter%collect : list operation : @storage
                    DROP;       # list operation : @storage
                  }; # list operation : @storage
              }
              {
                # == curate ==
                # sp.transfer(sp.list([sp.record(from_ = sp.sender, txs = sp.list([sp.record(to_ = self.data.curate, token_id = 0, amount = params.hDAO_amount)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), self.data.hdao, entry_point='transfer').open_some()) # @parameter%curate : @storage
                NIL operation; # list operation : @parameter%curate : @storage
                DUP 3;      # @storage : list operation : @parameter%curate : @storage
                CAR;        # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation : @parameter%curate : @storage
                GET 3;      # address : list operation : @parameter%curate : @storage
                CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : @parameter%curate : @storage
                IF_NONE
                  {
                    PUSH int 584; # int : list operation : @parameter%curate : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : @parameter%curate : @storage
                PUSH mutez 0; # mutez : @some : list operation : @parameter%curate : @storage
                NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                DUP 6;      # @parameter%curate : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                CAR;        # nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                PUSH nat 0; # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                DUP 9;      # @storage : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                CAR;        # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                CAR;        # pair (address %curate) (timestamp %genesis) : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                CAR;        # address : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                PAIR 3;     # pair address (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                SENDER;     # @sender : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                PAIR;       # pair @sender (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%curate : @storage
                TRANSFER_TOKENS; # operation : list operation : @parameter%curate : @storage
                CONS;       # list operation : @parameter%curate : @storage
                # sp.transfer(sp.record(hDAO_amount = params.hDAO_amount, issuer = self.data.royalties[params.objkt_id].issuer, objkt_id = params.objkt_id), sp.tez(0), sp.contract(sp.TRecord(hDAO_amount = sp.TNat, issuer = sp.TAddress, objkt_id = sp.TNat).layout(("hDAO_amount", ("issuer", "objkt_id"))), self.data.curate, entry_point='curate').open_some()) # list operation : @parameter%curate : @storage
                DUP 3;      # @storage : list operation : @parameter%curate : @storage
                CAR;        # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation : @parameter%curate : @storage
                CAR;        # pair (address %curate) (timestamp %genesis) : list operation : @parameter%curate : @storage
                CAR;        # address : list operation : @parameter%curate : @storage
                CONTRACT %curate (pair (nat %hDAO_amount) (pair (address %issuer) (nat %objkt_id))); # option (contract (pair (nat %hDAO_amount) (pair (address %issuer) (nat %objkt_id)))) : list operation : @parameter%curate : @storage
                IF_NONE
                  {
                    PUSH int 547; # int : list operation : @parameter%curate : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : @parameter%curate : @storage
                PUSH mutez 0; # mutez : @some : list operation : @parameter%curate : @storage
                DUP 4;      # @parameter%curate : mutez : @some : list operation : @parameter%curate : @storage
                CDR;        # nat : mutez : @some : list operation : @parameter%curate : @storage
                DUP 6;      # @storage : nat : mutez : @some : list operation : @parameter%curate : @storage
                GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%curate : @storage
                DUP 6;      # @parameter%curate : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%curate : @storage
                CDR;        # nat : big_map nat (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%curate : @storage
                GET;        # option (pair (address %issuer) (nat %royalties)) : nat : mutez : @some : list operation : @parameter%curate : @storage
                IF_NONE
                  {
                    PUSH int 557; # int : nat : mutez : @some : list operation : @parameter%curate : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : mutez : @some : list operation : @parameter%curate : @storage
                CAR;        # address : nat : mutez : @some : list operation : @parameter%curate : @storage
                DIG 5;      # @parameter%curate : address : nat : mutez : @some : list operation : @storage
                CAR;        # nat : address : nat : mutez : @some : list operation : @storage
                PAIR 3;     # pair nat (pair address nat) : mutez : @some : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }; # list operation : @storage
          }; # list operation : @storage
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                DROP;       # @storage
                # == genesis ==
                # sp.verify((sp.sender == self.data.manager) & (~ self.data.locked)) # @storage
                DUP;        # @storage : @storage
                CAR;        # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : @storage
                GET 6;      # address : @storage
                SENDER;     # @sender : address : @storage
                COMPARE;    # int : @storage
                EQ;         # bool : @storage
                IF
                  {
                    DUP;        # @storage : @storage
                    CAR;        # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : @storage
                    GET 5;      # bool : @storage
                    NOT;        # bool : @storage
                  }
                  {
                    PUSH bool False; # bool : @storage
                  }; # bool : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: (sp.sender == self.data.manager) & (~ self.data.locked)"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # self.data.genesis = sp.add_seconds(sp.now, 3888000) # @storage
                UNPAIR;     # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                UNPAIR;     # pair (address %curate) (timestamp %genesis) : pair (address %hdao) (pair (bool %locked) (address %manager)) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                CAR;        # address : pair (address %hdao) (pair (bool %locked) (address %manager)) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                PUSH int 3888000; # int : address : pair (address %hdao) (pair (bool %locked) (address %manager)) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                NOW;        # @now : int : address : pair (address %hdao) (pair (bool %locked) (address %manager)) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                ADD;        # timestamp : address : pair (address %hdao) (pair (bool %locked) (address %manager)) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                SWAP;       # address : timestamp : pair (address %hdao) (pair (bool %locked) (address %manager)) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                PAIR;       # pair address timestamp : pair (address %hdao) (pair (bool %locked) (address %manager)) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                SWAP;       # pair (address %hdao) (pair (bool %locked) (address %manager)) : pair address timestamp : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                # self.data.locked = True # pair (address %hdao) (pair (bool %locked) (address %manager)) : pair address timestamp : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                UNPAIR;     # address : pair (bool %locked) (address %manager) : pair address timestamp : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                SWAP;       # pair (bool %locked) (address %manager) : address : pair address timestamp : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                CDR;        # address : address : pair address timestamp : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                PUSH bool True; # bool : address : address : pair address timestamp : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                PAIR;       # pair bool address : address : pair address timestamp : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                SWAP;       # address : pair bool address : pair address timestamp : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                PAIR;       # pair address (pair bool address) : pair address timestamp : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                SWAP;       # pair address timestamp : pair address (pair bool address) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                PAIR;       # pair (pair address timestamp) (pair address (pair bool address)) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                PAIR;       # pair (pair (pair address timestamp) (pair address (pair bool address))) (pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
                NIL operation; # list operation : pair (pair (pair address timestamp) (pair address (pair bool address))) (pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
              }
              {
                # == mint_OBJKT ==
                # sp.verify(((params.amount > 0) & ((params.royalties >= 0) & (params.royalties <= 250))) & (params.amount <= 10000)) # @parameter%mint_OBJKT : @storage
                DUP;        # @parameter%mint_OBJKT : @parameter%mint_OBJKT : @storage
                CAR;        # pair (address %address) (nat %amount) : @parameter%mint_OBJKT : @storage
                CDR;        # nat : @parameter%mint_OBJKT : @storage
                PUSH nat 0; # nat : nat : @parameter%mint_OBJKT : @storage
                COMPARE;    # int : @parameter%mint_OBJKT : @storage
                LT;         # bool : @parameter%mint_OBJKT : @storage
                IF
                  {
                    DUP;        # @parameter%mint_OBJKT : @parameter%mint_OBJKT : @storage
                    GET 4;      # nat : @parameter%mint_OBJKT : @storage
                    PUSH nat 0; # nat : nat : @parameter%mint_OBJKT : @storage
                    SWAP;       # nat : nat : @parameter%mint_OBJKT : @storage
                    COMPARE;    # int : @parameter%mint_OBJKT : @storage
                    GE;         # bool : @parameter%mint_OBJKT : @storage
                    IF
                      {
                        DUP;        # @parameter%mint_OBJKT : @parameter%mint_OBJKT : @storage
                        GET 4;      # nat : @parameter%mint_OBJKT : @storage
                        PUSH nat 250; # nat : nat : @parameter%mint_OBJKT : @storage
                        SWAP;       # nat : nat : @parameter%mint_OBJKT : @storage
                        COMPARE;    # int : @parameter%mint_OBJKT : @storage
                        LE;         # bool : @parameter%mint_OBJKT : @storage
                      }
                      {
                        PUSH bool False; # bool : @parameter%mint_OBJKT : @storage
                      }; # bool : @parameter%mint_OBJKT : @storage
                  }
                  {
                    PUSH bool False; # bool : @parameter%mint_OBJKT : @storage
                  }; # bool : @parameter%mint_OBJKT : @storage
                IF
                  {
                    DUP;        # @parameter%mint_OBJKT : @parameter%mint_OBJKT : @storage
                    CAR;        # pair (address %address) (nat %amount) : @parameter%mint_OBJKT : @storage
                    CDR;        # nat : @parameter%mint_OBJKT : @storage
                    PUSH nat 10000; # nat : nat : @parameter%mint_OBJKT : @storage
                    SWAP;       # nat : nat : @parameter%mint_OBJKT : @storage
                    COMPARE;    # int : @parameter%mint_OBJKT : @storage
                    LE;         # bool : @parameter%mint_OBJKT : @storage
                  }
                  {
                    PUSH bool False; # bool : @parameter%mint_OBJKT : @storage
                  }; # bool : @parameter%mint_OBJKT : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: ((params.amount > 0) & ((params.royalties >= 0) & (params.royalties <= 250))) & (params.amount <= 10000)"; # string : @parameter%mint_OBJKT : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%mint_OBJKT : @storage
                # sp.transfer(sp.record(address = params.address, amount = params.amount, token_id = self.data.objkt_id, token_info = {'' : params.metadata}), sp.tez(0), sp.contract(sp.TRecord(address = sp.TAddress, amount = sp.TNat, token_id = sp.TNat, token_info = sp.TMap(sp.TString, sp.TBytes)).layout((("address", "amount"), ("token_id", "token_info"))), self.data.objkt, entry_point='mint').open_some()) # @parameter%mint_OBJKT : @storage
                NIL operation; # list operation : @parameter%mint_OBJKT : @storage
                DUP 3;      # @storage : list operation : @parameter%mint_OBJKT : @storage
                GET 3;      # pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id)) : list operation : @parameter%mint_OBJKT : @storage
                GET 3;      # address : list operation : @parameter%mint_OBJKT : @storage
                CONTRACT %mint (pair (pair (address %address) (nat %amount)) (pair (nat %token_id) (map %token_info string bytes))); # option (contract (pair (pair (address %address) (nat %amount)) (pair (nat %token_id) (map %token_info string bytes)))) : list operation : @parameter%mint_OBJKT : @storage
                IF_NONE
                  {
                    PUSH int 520; # int : list operation : @parameter%mint_OBJKT : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : @parameter%mint_OBJKT : @storage
                PUSH mutez 0; # mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                EMPTY_MAP string bytes; # map string bytes : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                DUP 5;      # @parameter%mint_OBJKT : map string bytes : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                GET 3;      # bytes : map string bytes : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                SOME;       # option bytes : map string bytes : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                PUSH string ""; # string : option bytes : map string bytes : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                UPDATE;     # map string bytes : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                DUP 6;      # @storage : map string bytes : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                GET 3;      # pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id)) : map string bytes : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                GET 4;      # nat : map string bytes : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                PAIR;       # pair nat (map string bytes) : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                DIG 4;      # @parameter%mint_OBJKT : pair nat (map string bytes) : mutez : @some : list operation : @storage
                DUP;        # @parameter%mint_OBJKT : @parameter%mint_OBJKT : pair nat (map string bytes) : mutez : @some : list operation : @storage
                CAR;        # pair (address %address) (nat %amount) : @parameter%mint_OBJKT : pair nat (map string bytes) : mutez : @some : list operation : @storage
                CDR;        # nat : @parameter%mint_OBJKT : pair nat (map string bytes) : mutez : @some : list operation : @storage
                SWAP;       # @parameter%mint_OBJKT : nat : pair nat (map string bytes) : mutez : @some : list operation : @storage
                DUP;        # @parameter%mint_OBJKT : @parameter%mint_OBJKT : nat : pair nat (map string bytes) : mutez : @some : list operation : @storage
                DUG 6;      # @parameter%mint_OBJKT : nat : pair nat (map string bytes) : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                CAR;        # pair (address %address) (nat %amount) : nat : pair nat (map string bytes) : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                CAR;        # address : nat : pair nat (map string bytes) : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                PAIR;       # pair address nat : pair nat (map string bytes) : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                PAIR;       # pair (pair address nat) (pair nat (map string bytes)) : mutez : @some : list operation : @parameter%mint_OBJKT : @storage
                TRANSFER_TOKENS; # operation : list operation : @parameter%mint_OBJKT : @storage
                CONS;       # list operation : @parameter%mint_OBJKT : @storage
                # self.data.royalties[self.data.objkt_id] = sp.record(issuer = sp.sender, royalties = params.royalties) # list operation : @parameter%mint_OBJKT : @storage
                DUP 3;      # @storage : list operation : @parameter%mint_OBJKT : @storage
                DUP;        # @storage : @storage : list operation : @parameter%mint_OBJKT : @storage
                GET 5;      # big_map nat (pair (address %issuer) (nat %royalties)) : @storage : list operation : @parameter%mint_OBJKT : @storage
                DIG 3;      # @parameter%mint_OBJKT : big_map nat (pair (address %issuer) (nat %royalties)) : @storage : list operation : @storage
                GET 4;      # nat : big_map nat (pair (address %issuer) (nat %royalties)) : @storage : list operation : @storage
                SENDER;     # @sender : nat : big_map nat (pair (address %issuer) (nat %royalties)) : @storage : list operation : @storage
                PAIR;       # pair @sender nat : big_map nat (pair (address %issuer) (nat %royalties)) : @storage : list operation : @storage
                SOME;       # option (pair @sender nat) : big_map nat (pair (address %issuer) (nat %royalties)) : @storage : list operation : @storage
                DIG 4;      # @storage : option (pair @sender nat) : big_map nat (pair (address %issuer) (nat %royalties)) : @storage : list operation
                GET 3;      # pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id)) : option (pair @sender nat) : big_map nat (pair (address %issuer) (nat %royalties)) : @storage : list operation
                GET 4;      # nat : option (pair @sender nat) : big_map nat (pair (address %issuer) (nat %royalties)) : @storage : list operation
                UPDATE;     # big_map nat (pair address nat) : @storage : list operation
                UPDATE 5;   # @storage : list operation
                # self.data.objkt_id += 1 # @storage : list operation
                UNPAIR;     # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))) : list operation
                SWAP;       # pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                UNPAIR;     # pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id)) : pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                UNPAIR;     # big_map string bytes : pair (address %objkt) (nat %objkt_id) : pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                SWAP;       # pair (address %objkt) (nat %objkt_id) : big_map string bytes : pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                UNPAIR;     # address : nat : big_map string bytes : pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                SWAP;       # nat : address : big_map string bytes : pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                PUSH nat 1; # nat : nat : address : big_map string bytes : pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                ADD;        # nat : address : big_map string bytes : pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                SWAP;       # address : nat : big_map string bytes : pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                PAIR;       # pair address nat : big_map string bytes : pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                SWAP;       # big_map string bytes : pair address nat : pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                PAIR;       # pair (big_map string bytes) (pair address nat) : pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                PAIR;       # pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))) : pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : list operation
                SWAP;       # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))) : list operation
                PAIR;       # pair (pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager)))) (pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))) : list operation
                SWAP;       # list operation : pair (pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager)))) (pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
              }; # list operation : pair (pair (pair address timestamp) (pair address (pair bool address))) (pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
          }
          {
            IF_LEFT
              {
                # == swap ==
                # sp.verify(params.objkt_amount > 0) # @parameter%swap : @storage
                DUP;        # @parameter%swap : @parameter%swap : @storage
                CAR;        # nat : @parameter%swap : @storage
                PUSH nat 0; # nat : nat : @parameter%swap : @storage
                COMPARE;    # int : @parameter%swap : @storage
                LT;         # bool : @parameter%swap : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: params.objkt_amount > 0"; # string : @parameter%swap : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%swap : @storage
                # sp.transfer(sp.list([sp.record(from_ = sp.sender, txs = sp.list([sp.record(to_ = sp.self_address, token_id = params.objkt_id, amount = params.objkt_amount)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), self.data.objkt, entry_point='transfer').open_some()) # @parameter%swap : @storage
                NIL operation; # list operation : @parameter%swap : @storage
                DUP 3;      # @storage : list operation : @parameter%swap : @storage
                GET 3;      # pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id)) : list operation : @parameter%swap : @storage
                GET 3;      # address : list operation : @parameter%swap : @storage
                CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : list operation : @parameter%swap : @storage
                IF_NONE
                  {
                    PUSH int 584; # int : list operation : @parameter%swap : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : @parameter%swap : @storage
                PUSH mutez 0; # mutez : @some : list operation : @parameter%swap : @storage
                NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : @storage
                NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : @storage
                DIG 5;      # @parameter%swap : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                DUP;        # @parameter%swap : @parameter%swap : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                CAR;        # nat : @parameter%swap : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                SWAP;       # @parameter%swap : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                DUP;        # @parameter%swap : @parameter%swap : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                DUG 7;      # @parameter%swap : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : @storage
                GET 3;      # nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : @storage
                SELF_ADDRESS; # @self : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : @storage
                PAIR 3;     # pair @self (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : @storage
                CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : @storage
                SENDER;     # @sender : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : @storage
                PAIR;       # pair @sender (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : @storage
                CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%swap : @storage
                TRANSFER_TOKENS; # operation : list operation : @parameter%swap : @storage
                CONS;       # list operation : @parameter%swap : @storage
                # self.data.swaps[self.data.swap_id] = sp.record(issuer = sp.sender, objkt_amount = params.objkt_amount, objkt_id = params.objkt_id, xtz_per_objkt = params.xtz_per_objkt) # list operation : @parameter%swap : @storage
                DUP 3;      # @storage : list operation : @parameter%swap : @storage
                DUP;        # @storage : @storage : list operation : @parameter%swap : @storage
                GET 8;      # big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%swap : @storage
                DIG 3;      # @parameter%swap : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @storage
                DUP;        # @parameter%swap : @parameter%swap : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @storage
                GET 4;      # mutez : @parameter%swap : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @storage
                SWAP;       # @parameter%swap : mutez : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @storage
                DUP;        # @parameter%swap : @parameter%swap : mutez : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @storage
                DUG 5;      # @parameter%swap : mutez : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%swap : @storage
                GET 3;      # nat : mutez : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%swap : @storage
                PAIR;       # pair nat mutez : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @parameter%swap : @storage
                DIG 4;      # @parameter%swap : pair nat mutez : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @storage
                CAR;        # nat : pair nat mutez : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @storage
                SENDER;     # @sender : nat : pair nat mutez : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @storage
                PAIR;       # pair @sender nat : pair nat mutez : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @storage
                PAIR;       # pair (pair @sender nat) (pair nat mutez) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @storage
                SOME;       # option (pair (pair @sender nat) (pair nat mutez)) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation : @storage
                DIG 4;      # @storage : option (pair (pair @sender nat) (pair nat mutez)) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation
                GET 7;      # nat : option (pair (pair @sender nat) (pair nat mutez)) : big_map nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))) : @storage : list operation
                UPDATE;     # big_map nat (pair (pair address nat) (pair nat mutez)) : @storage : list operation
                UPDATE 8;   # @storage : list operation
                # self.data.swap_id += 1 # @storage : list operation
                DUP;        # @storage : @storage : list operation
                GET 7;      # nat : @storage : list operation
                PUSH nat 1; # nat : nat : @storage : list operation
                ADD;        # nat : @storage : list operation
                UPDATE 7;   # @storage : list operation
                SWAP;       # list operation : @storage
              }
              {
                SWAP;       # @storage : @parameter%update_manager
                # == update_manager ==
                # sp.verify(sp.sender == self.data.manager) # @storage : @parameter%update_manager
                DUP;        # @storage : @storage : @parameter%update_manager
                DUG 2;      # @storage : @parameter%update_manager : @storage
                CAR;        # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : @parameter%update_manager : @storage
                GET 6;      # address : @parameter%update_manager : @storage
                SENDER;     # @sender : address : @parameter%update_manager : @storage
                COMPARE;    # int : @parameter%update_manager : @storage
                EQ;         # bool : @parameter%update_manager : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: sp.sender == self.data.manager"; # string : @parameter%update_manager : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%update_manager : @storage
                SWAP;       # @storage : @parameter%update_manager
                # self.data.manager = params # @storage : @parameter%update_manager
                UNPAIR;     # pair (pair (address %curate) (timestamp %genesis)) (pair (address %hdao) (pair (bool %locked) (address %manager))) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))) : @parameter%update_manager
                UNPAIR;     # pair (address %curate) (timestamp %genesis) : pair (address %hdao) (pair (bool %locked) (address %manager)) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))) : @parameter%update_manager
                SWAP;       # pair (address %hdao) (pair (bool %locked) (address %manager)) : pair (address %curate) (timestamp %genesis) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))) : @parameter%update_manager
                UNPAIR;     # address : pair (bool %locked) (address %manager) : pair (address %curate) (timestamp %genesis) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))) : @parameter%update_manager
                SWAP;       # pair (bool %locked) (address %manager) : address : pair (address %curate) (timestamp %genesis) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))) : @parameter%update_manager
                CAR;        # bool : address : pair (address %curate) (timestamp %genesis) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))) : @parameter%update_manager
                DIG 4;      # @parameter%update_manager : bool : address : pair (address %curate) (timestamp %genesis) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                SWAP;       # bool : @parameter%update_manager : address : pair (address %curate) (timestamp %genesis) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                PAIR;       # pair bool @parameter%update_manager : address : pair (address %curate) (timestamp %genesis) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                SWAP;       # address : pair bool @parameter%update_manager : pair (address %curate) (timestamp %genesis) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                PAIR;       # pair address (pair bool @parameter%update_manager) : pair (address %curate) (timestamp %genesis) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                SWAP;       # pair (address %curate) (timestamp %genesis) : pair address (pair bool @parameter%update_manager) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                PAIR;       # pair (pair (address %curate) (timestamp %genesis)) (pair address (pair bool @parameter%update_manager)) : pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))
                PAIR;       # pair (pair (pair (address %curate) (timestamp %genesis)) (pair address (pair bool @parameter%update_manager))) (pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
                NIL operation; # list operation : pair (pair (pair (address %curate) (timestamp %genesis)) (pair address (pair bool @parameter%update_manager))) (pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
              }; # list operation : pair (pair (pair (address %curate) (timestamp %genesis)) (pair address (pair bool address))) (pair (pair (big_map %metadata string bytes) (pair (address %objkt) (nat %objkt_id))) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
          }; # list operation : pair (pair (pair address timestamp) (pair address (pair bool address))) (pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
      }; # list operation : pair (pair (pair address timestamp) (pair address (pair bool address))) (pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
    NIL operation; # list operation : list operation : pair (pair (pair address timestamp) (pair address (pair bool address))) (pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
    SWAP;       # list operation : list operation : pair (pair (pair address timestamp) (pair address (pair bool address))) (pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
    ITER
      {
        CONS;       # list operation : pair (pair (pair address timestamp) (pair address (pair bool address))) (pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
      }; # list operation : pair (pair (pair address timestamp) (pair address (pair bool address))) (pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt)))))))
    PAIR;       # pair (list operation) (pair (pair (pair address timestamp) (pair address (pair bool address))) (pair (pair (big_map string bytes) (pair address nat)) (pair (big_map %royalties nat (pair (address %issuer) (nat %royalties))) (pair (nat %swap_id) (big_map %swaps nat (pair (pair (address %issuer) (nat %objkt_amount)) (pair (nat %objkt_id) (mutez %xtz_per_objkt))))))))
  };
