on:
  push:
    branches:
      - main
jobs:
  insiders-build:
    strategy:
      matrix:
        os: [windows]
        include:
          -os: windows
          build: npx caxa -i . -o "hentools--win--${{ github.sha }}.exe" "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/run-hentools.js"
          artifact: hentools--win--${{ github.sha }}.exe
      runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          cache: 'yarn'
      - run: yarn install
      - run: yarn format
      - run: yarn lint
      - run: yarn clean-build
      - run: yarn compile
      - run: ${{ matrix.build }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: insider-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: hentools--win--${{ github.sha }}.exe
      - run: echo "::set-output name=tag::${{GITHUB_REF#refs/tags/}"
        id: tag
      - uses: actions/create-release@v1
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: hentools--win--${{ github.sha }}.exe
          asset_name: hentools--win--${{ steps.tag.outputs.tag }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
